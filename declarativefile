pipeline {
  agent {
      label 'JENKINS'
  }
  stages {
    stage('clone code') {
          steps {
        git url: 'https://github.com/99876543/spring-petclinic.git',
           branch: 'declarative'
      }
    }
    stage('build') {
          steps { 
         sh './mvnw clean install'
         sh './mvnw package'
      }       
    }
    stage('package') {
            tools {
                jdk 'JDK_17'
            }
            steps {
                sh "mvn ${params.MAVEN_GOAL}"
                rtMavenRun (
                    tool: 'MAVEN_DEFAULT',
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: "MAVEN_DEPLOYER"

                )
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
                //sh "mvn ${params.MAVEN_GOAL}"
            }
        }
         stage('sonar analysis') {
            steps {
            withSonarQubeEnv('SONARCLOUD') {
            sh './mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=syedadnan01_springpet'
              
          }
        }
      }
      stage('post build') {
          steps {
              archiveArtifacts artifacts: '**/target/spring-petclinic-3.0.0-SNAPSHOT.jar',
                               onlyIfSuccessful: true
              junit testResults: '**/surefire-reports/TEST-*.xml'
          }
      }
  }
  post {
    always {
      emailext body: "Build ${BUILD_NUMBER} has finished.", subject: 'Jenkins build notification', to: 'syedadnan786.mr@gmail.com'
      }
    }
}  
